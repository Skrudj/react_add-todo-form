{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","_ref","user","_jsx","className","href","concat","children","TodoInfo","todo","title","completed","_jsxs","cn","TodoList","todos","map","findUserById","usersFromServer","find","parsedTodos","userId","_objectSpread","findMaxTodoId","Math","max","apply","_toConsumableArray","App","_useState","useState","_useState2","_slicedToArray","setTodos","_useState3","_useState4","setTitle","_useState5","_useState6","selectedUserId","setSelectedUserId","_useState7","_useState8","hasTitleError","setHasTitleError","_useState9","_useState10","hasSelectedUserError","setHasSelectedUserError","action","method","onSubmit","event","preventDefault","prevTodos","newTodo","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da78b278.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  user,\n}) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n}) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/todo';\n\nconst findUserById = (id: number) => {\n  return usersFromServer.find(user => (\n    user.id === id\n  )) || null;\n};\n\nconst parsedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nconst findMaxTodoId = (todos: Todo[]) => {\n  return Math.max(...todos.map(todo => todo.id));\n};\n\nexport const App = () => {\n  // #region state\n  const [todos, setTodos] = useState<Todo[]>(parsedTodos);\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasSelectedUserError, setHasSelectedUserError] = useState(false);\n  // #endregion\n  // #region handlers\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setHasSelectedUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasSelectedUserError(!selectedUserId);\n\n    if (!title || !selectedUserId) {\n      return;\n    }\n\n    setTodos(prevTodos => {\n      const newTodo = {\n        id: findMaxTodoId(prevTodos) + 1,\n        title,\n        completed: false,\n        userId: selectedUserId,\n        user: findUserById(selectedUserId),\n      };\n\n      return [\n        ...prevTodos,\n        newTodo,\n      ];\n    });\n\n    setTitle('');\n    setSelectedUserId(0);\n  };\n  // #endregion\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n            placeholder=\"Please enter a title\"\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasSelectedUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}